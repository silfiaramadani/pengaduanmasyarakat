name: CI

on:
  push:
  pull_request:

jobs:
  testsuite:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1', '8.2', '8.3']
        db-type: [sqlite]
        prefer-lowest: ['']

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, apcu, memcached, redis, pdo_${{ matrix.db-type }}
          ini-values: apc.enable_cli = 1
          #coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Get date part for cache key
        id: key-date
        run: echo "::set-output name=date::$(date +'%Y-%m')"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

      - name: Composer install
        run: |
          if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
            composer update --prefer-lowest --prefer-stable
          else
            composer update
          fi

      - name: Run PHPUnit
        run: |
          if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then export DB_URL='sqlite:///:memory:'; fi
          vendor/bin/phpunit

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, apcu, memcached, redis
          tools: cs2pr
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Get date part for cache key
        id: key-date
        run: echo "::set-output name=date::$(date +'%Y-%m')"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

      - name: Composer install
        run: composer install

      - name: Run PHP CodeSniffer
        run: composer cs-check

      - name: Run phpstan
        if: success() || failure()
        run: composer stan
        continue-on-error: true